// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTemplate.Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    [Migration("20241212160047_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebTemplate.Models.Prodavnica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prodavnice");
                });

            modelBuilder.Entity("WebTemplate.Models.Proizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<int>("DostupnaKolicina")
                        .HasColumnType("int");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProdavnicaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdavnicaId");

                    b.ToTable("Proizvodi");
                });

            modelBuilder.Entity("WebTemplate.Models.Smena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("krajSmene")
                        .HasColumnType("time");

                    b.Property<string>("nazivSmene")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("pocetakSmene")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Smene");
                });

            modelBuilder.Entity("WebTemplate.Models.Zaposleni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("prodavnicaId")
                        .HasColumnType("int");

                    b.Property<string>("slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("prodavnicaId");

                    b.ToTable("Zaposleni");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Zaposleni");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("WebTemplate.Models.Prodavac", b =>
                {
                    b.HasBaseType("WebTemplate.Models.Zaposleni");

                    b.Property<double>("mesecniBonus")
                        .HasColumnType("float");

                    b.Property<double>("ukupnaCenaProdatihProizvoda")
                        .HasColumnType("float");

                    b.Property<int?>("vodjaSmeneId")
                        .HasColumnType("int");

                    b.HasIndex("vodjaSmeneId");

                    b.HasDiscriminator().HasValue("Prodavac");
                });

            modelBuilder.Entity("WebTemplate.Models.VodjaSmene", b =>
                {
                    b.HasBaseType("WebTemplate.Models.Zaposleni");

                    b.Property<int>("smenaId")
                        .HasColumnType("int");

                    b.HasIndex("smenaId");

                    b.HasDiscriminator().HasValue("VodjaSmene");
                });

            modelBuilder.Entity("WebTemplate.Models.Proizvod", b =>
                {
                    b.HasOne("WebTemplate.Models.Prodavnica", "Prodavnica")
                        .WithMany("Proizvodi")
                        .HasForeignKey("ProdavnicaId");

                    b.Navigation("Prodavnica");
                });

            modelBuilder.Entity("WebTemplate.Models.Zaposleni", b =>
                {
                    b.HasOne("WebTemplate.Models.Prodavnica", "prodavnica")
                        .WithMany("listaZaposlenih")
                        .HasForeignKey("prodavnicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("prodavnica");
                });

            modelBuilder.Entity("WebTemplate.Models.Prodavac", b =>
                {
                    b.HasOne("WebTemplate.Models.VodjaSmene", "vodjaSmene")
                        .WithMany("Prodavci")
                        .HasForeignKey("vodjaSmeneId");

                    b.Navigation("vodjaSmene");
                });

            modelBuilder.Entity("WebTemplate.Models.VodjaSmene", b =>
                {
                    b.HasOne("WebTemplate.Models.Smena", "smena")
                        .WithMany("vodjeSmene")
                        .HasForeignKey("smenaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("smena");
                });

            modelBuilder.Entity("WebTemplate.Models.Prodavnica", b =>
                {
                    b.Navigation("Proizvodi");

                    b.Navigation("listaZaposlenih");
                });

            modelBuilder.Entity("WebTemplate.Models.Smena", b =>
                {
                    b.Navigation("vodjeSmene");
                });

            modelBuilder.Entity("WebTemplate.Models.VodjaSmene", b =>
                {
                    b.Navigation("Prodavci");
                });
#pragma warning restore 612, 618
        }
    }
}
